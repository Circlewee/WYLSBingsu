{
  // 레퍼런스: https://typescript-kr.github.io/pages/compiler-options.html
  "compilerOptions": {
    "sourceMap": true, //해당하는 .map 파일을 생성합니다.
    "target": "es5", // 타입스크립트를 어떤 버전으로 바꿔줄 지
    "lib": ["dom", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020"], //컴파일에 포함될 라이브러리 파일 목록입니다.
    "allowJs": true, //	JavaScript 파일의 컴파일을 허용합니다
    "strict": true, // 엄격모드
    "forceConsistentCasingInFileNames": true, // 동일 파일 참조에 대해 일관성 없는 대소문자를 비활성화합니다.
    "esModuleInterop": true, //런타임 바벨 생태계 호환성을 위한 __importStar와 __importDefault 헬퍼를 내보내고 타입 시스템 호환성을 위해 --allowSyntheticDefaultImports를 활성화합니다.
    "module": "commonjs", // 모듈 코드 생성 지정 "None", "CommonJS", "AMD", "System", "UMD", "ES6", "ES2015" 또는 "ESNext".
    "isolatedModules": true, // 추가 검사를 수행하여 별도의 컴파일
    "jsx": "react-jsx", // .tsx 파일에서 JSX 지원
    "allowSyntheticDefaultImports": true, // default export가 없는 모듈에서 default imports를 허용합니다. 코드 방출에는 영향을 주지 않으며, 타입 검사만 수행합니다.
    "baseUrl": "./", // 비-상대적 모듈 이름을 해석하기 위한 기본 디렉터리. 자세한 내용은 모듈 해석 문서을 참조하세요.
    "outDir": "./dist", //	출력 구조를 디렉토리로 리다이렉트합니다.
    "moduleResolution": "node", // 모듈 해석 방법 결정. Node.js/io.js 스타일 해석의 경우, "Node" 또는 "Classic" 중 하나입니다.
    "typeRoots": ["src/types"],
    "paths": {
      "@/*": ["src/*"]
    },
    "types": ["node"],
    "resolveJsonModule": true
  },
  "exclude": ["node_modules"],
  "include": ["**/*.ts", "**/*.tsx"]
}
